"""initial migrationw

Revision ID: 4077dce5c08e
Revises: 
Create Date: 2025-09-12 15:00:53.123454

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4077dce5c08e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cacheentry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('hit_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_index('idx_cache_expires', 'cacheentry', ['expires_at'], unique=False)
    op.create_index('idx_cache_key', 'cacheentry', ['key'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('parent_id != id', name='check_no_self_reference'),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_category_active', 'categories', ['is_active'], unique=False)
    op.create_index('idx_category_name', 'categories', ['name'], unique=False)
    op.create_index('idx_category_parent', 'categories', ['parent_id'], unique=False)
    op.create_table('ratelimit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=100), nullable=False),
    sa.Column('endpoint', sa.String(length=100), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('window_start', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_rate_limit_identifier', 'ratelimit', ['identifier', 'endpoint'], unique=False)
    op.create_index('idx_rate_limit_window', 'ratelimit', ['window_start'], unique=False)
    op.create_table('schemaversion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('applied_by', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('version')
    )
    op.create_index('idx_schema_applied_by', 'schemaversion', ['applied_by'], unique=False)
    op.create_index('idx_schema_version', 'schemaversion', ['version'], unique=False)
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('normalized_name', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('normalized_name')
    )
    op.create_index('idx_skill_active', 'skill', ['is_active'], unique=False)
    op.create_index('idx_skill_normalized', 'skill', ['normalized_name'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('normalized_name', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('normalized_name')
    )
    op.create_index('idx_tag_active', 'tag', ['is_active'], unique=False)
    op.create_index('idx_tag_normalized', 'tag', ['normalized_name'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('CANDIDATE', 'EMPLOYER', name='userrole'), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('email_verification_token', sa.String(length=255), nullable=True),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=False),
    sa.Column('backup_codes', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('last_password_change', sa.DateTime(), nullable=True),
    sa.Column('failed_login_ips', sa.ARRAY(sa.String(length=45)), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('idx_user_active', 'user', ['is_active'], unique=False)
    op.create_index('idx_user_deleted', 'user', ['deleted_at'], unique=False)
    op.create_index('idx_user_email', 'user', ['email'], unique=False)
    op.create_index('idx_user_email_verified', 'user', ['email', 'email_verified'], unique=False)
    op.create_index('idx_user_last_login', 'user', ['last_login'], unique=False)
    op.create_index('idx_user_locked', 'user', ['locked_until'], unique=False)
    op.create_index('idx_user_reset_token', 'user', ['password_reset_token'], unique=False)
    op.create_index('idx_user_role', 'user', ['role'], unique=False)
    op.create_index('idx_user_verification_token', 'user', ['email_verification_token'], unique=False)
    op.create_table('auditlog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(length=50), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('request_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_ip', 'auditlog', ['ip_address'], unique=False)
    op.create_index('idx_audit_record', 'auditlog', ['table_name', 'record_id'], unique=False)
    op.create_index('idx_audit_session', 'auditlog', ['session_id'], unique=False)
    op.create_index('idx_audit_table_action', 'auditlog', ['table_name', 'action'], unique=False)
    op.create_index('idx_audit_user_action', 'auditlog', ['user_id', 'action', 'created_at'], unique=False)
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('owner_id')
    )
    op.create_index('idx_company_active', 'company', ['is_active'], unique=False)
    op.create_index('idx_company_active_industry', 'company', ['is_active', 'industry'], unique=False)
    op.create_index('idx_company_industry', 'company', ['industry'], unique=False)
    op.create_index('idx_company_name', 'company', ['name'], unique=False)
    op.create_index('idx_company_owner', 'company', ['owner_id'], unique=False)
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.String(length=100), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=1000), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('reply_to_id', sa.Integer(), nullable=True),
    sa.Column('message_type', sa.String(length=20), nullable=True),
    sa.Column('file_url', sa.String(length=500), nullable=True),
    sa.Column('is_flagged', sa.Boolean(), nullable=False),
    sa.Column('flagged_reason', sa.String(length=200), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.Column('sender_ip', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('length(text) <= 1000', name='check_message_length'),
    sa.CheckConstraint('length(trim(text)) > 0', name='check_message_not_empty'),
    sa.CheckConstraint('sender_id != recipient_id', name='check_different_users'),
    sa.ForeignKeyConstraint(['deleted_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reply_to_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_message_chat', 'message', ['chat_id'], unique=False)
    op.create_index('idx_message_chat_created', 'message', ['chat_id', 'created_at'], unique=False)
    op.create_index('idx_message_created', 'message', ['created_at'], unique=False)
    op.create_index('idx_message_deleted', 'message', ['deleted_at'], unique=False)
    op.create_index('idx_message_flagged', 'message', ['is_flagged'], unique=False)
    op.create_index('idx_message_recipient', 'message', ['recipient_id'], unique=False)
    op.create_index('idx_message_reply', 'message', ['reply_to_id'], unique=False)
    op.create_index('idx_message_sender', 'message', ['sender_id'], unique=False)
    op.create_index('idx_message_sender_ip_addr', 'message', ['sender_ip'], unique=False)
    op.create_index('idx_message_type', 'message', ['message_type'], unique=False)
    op.create_index('idx_message_unread', 'message', ['recipient_id', 'is_read'], unique=False)
    op.create_index('idx_message_unread_sender', 'message', ['recipient_id', 'is_read', 'sender_id'], unique=False)
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('MESSAGE', 'APPLICATION', 'JOB_UPDATE', 'SYSTEM', name='notificationtype'), nullable=False),
    sa.Column('content', sa.String(length=500), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_sent', sa.Boolean(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('delivery_method', sa.String(length=20), nullable=False),
    sa.Column('group_key', sa.String(length=100), nullable=True),
    sa.Column('priority', sa.String(length=10), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('notification_data', sa.JSON(), nullable=True),
    sa.Column('related_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notification_created', 'notification', ['created_at'], unique=False)
    op.create_index('idx_notification_delivery', 'notification', ['delivery_method'], unique=False)
    op.create_index('idx_notification_expires', 'notification', ['expires_at'], unique=False)
    op.create_index('idx_notification_group', 'notification', ['group_key'], unique=False)
    op.create_index('idx_notification_priority', 'notification', ['priority'], unique=False)
    op.create_index('idx_notification_sent', 'notification', ['is_sent', 'sent_at'], unique=False)
    op.create_index('idx_notification_type', 'notification', ['type'], unique=False)
    op.create_index('idx_notification_unread', 'notification', ['user_id', 'is_read'], unique=False)
    op.create_index('idx_notification_user', 'notification', ['user_id'], unique=False)
    op.create_table('performancemetric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('endpoint', sa.String(length=100), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('response_time', sa.Float(), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_perf_endpoint', 'performancemetric', ['endpoint', 'created_at'], unique=False)
    op.create_index('idx_perf_response_time', 'performancemetric', ['response_time'], unique=False)
    op.create_index('idx_perf_status', 'performancemetric', ['status_code'], unique=False)
    op.create_index('idx_perf_user', 'performancemetric', ['user_id'], unique=False)
    op.create_table('resume',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('experience', sa.String(), nullable=False),
    sa.Column('skills', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=150), nullable=False),
    sa.Column('summary', sa.String(length=150), nullable=True),
    sa.Column('education', sa.String(), nullable=True),
    sa.Column('certifications', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('languages', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug'),
    sa.UniqueConstraint('user_id', 'is_default', name='uq_user_default_resume')
    )
    op.create_index('idx_resume_default', 'resume', ['is_default'], unique=False)
    op.create_index('idx_resume_deleted', 'resume', ['deleted_at'], unique=False)
    op.create_index('idx_resume_languages', 'resume', ['languages'], unique=False, postgresql_using='gin')
    op.create_index('idx_resume_public', 'resume', ['is_public'], unique=False)
    op.create_index('idx_resume_skills', 'resume', ['skills'], unique=False, postgresql_using='gin')
    op.create_index('idx_resume_slug', 'resume', ['slug'], unique=False)
    op.create_index('idx_resume_user', 'resume', ['user_id'], unique=False)
    op.create_index('idx_resume_version', 'resume', ['user_id', 'version'], unique=False)
    op.create_table('companymember',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_role', sa.Enum('OWNER', 'RECRUITER', 'HR_MANAGER', name='companyrole'), nullable=False),
    sa.Column('permissions', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'company_id', name='uq_user_company')
    )
    op.create_index('idx_member_active', 'companymember', ['is_active'], unique=False)
    op.create_index('idx_member_company', 'companymember', ['company_id'], unique=False)
    op.create_index('idx_member_permissions', 'companymember', ['permissions'], unique=False, postgresql_using='gin')
    op.create_index('idx_member_role', 'companymember', ['company_role'], unique=False)
    op.create_index('idx_member_user', 'companymember', ['user_id'], unique=False)
    op.create_table('invitation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('company_role', sa.Enum('OWNER', 'RECRUITER', 'HR_MANAGER', name='companyrole'), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('invited_by', sa.Integer(), nullable=False),
    sa.Column('sender_ip', sa.String(length=45), nullable=True),
    sa.Column('opened_at', sa.DateTime(), nullable=True),
    sa.Column('clicked_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['invited_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index('idx_invitation_company', 'invitation', ['company_id'], unique=False)
    op.create_index('idx_invitation_email', 'invitation', ['email'], unique=False)
    op.create_index('idx_invitation_expires', 'invitation', ['expires_at'], unique=False)
    op.create_index('idx_invitation_sender_ip', 'invitation', ['sender_ip'], unique=False)
    op.create_index('idx_invitation_stats', 'invitation', ['opened_at', 'clicked_at'], unique=False)
    op.create_index('idx_invitation_token', 'invitation', ['token'], unique=False)
    op.create_index('idx_invitation_unused', 'invitation', ['is_used', 'expires_at'], unique=False)
    op.create_table('job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('salary', sa.Float(), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=False),
    sa.Column('employment_type', sa.Enum('FULL_TIME', 'PART_TIME', 'CONTRACT', 'REMOTE', 'INTERNSHIP', 'FREELANCE', 'HYBRID', name='employmenttype'), nullable=False),
    sa.Column('education_level', sa.Enum('NO_EDUCATION', 'HIGH_SCHOOL', 'VOCATIONAL', 'BACHELOR', 'MASTER', 'PHD', 'CERTIFICATION', name='educationlevel'), nullable=True),
    sa.Column('skill_levels', sa.ARRAY(sa.String(length=20)), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=250), nullable=False),
    sa.Column('meta_title', sa.String(length=60), nullable=True),
    sa.Column('meta_description', sa.String(length=160), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('applications_count', sa.Integer(), nullable=False),
    sa.Column('featured_until', sa.DateTime(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('benefits', sa.Text(), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('priority_score', sa.Integer(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("expires_at > created_at + interval '1 day'", name='check_min_job_duration'),
    sa.CheckConstraint('cardinality(skill_levels) <= 2', name='check_max_skill_levels'),
    sa.CheckConstraint('cardinality(skill_levels) >= 1', name='check_min_skill_levels'),
    sa.CheckConstraint('expires_at > created_at', name='check_future_expiry'),
    sa.CheckConstraint('length(description) >= 50', name='check_description_length'),
    sa.CheckConstraint('length(trim(title)) > 0', name='check_title_not_empty'),
    sa.CheckConstraint('salary > 0', name='check_positive_salary'),
    sa.ForeignKeyConstraint(['approved_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index('idx_job_active_approved_featured', 'job', ['is_active', 'is_approved', 'is_featured'], unique=False)
    op.create_index('idx_job_active_expires', 'job', ['is_active', 'expires_at'], unique=False)
    op.create_index('idx_job_approved', 'job', ['is_approved'], unique=False)
    op.create_index('idx_job_category', 'job', ['category_id'], unique=False)
    op.create_index('idx_job_category_featured', 'job', ['category_id', 'is_featured', 'priority_score'], unique=False)
    op.create_index('idx_job_company', 'job', ['company_id'], unique=False)
    op.create_index('idx_job_company_active', 'job', ['company_id', 'is_active'], unique=False)
    op.create_index('idx_job_deleted', 'job', ['deleted_at'], unique=False)
    op.create_index('idx_job_education_level', 'job', ['education_level'], unique=False)
    op.create_index('idx_job_employment_type', 'job', ['employment_type'], unique=False)
    op.create_index('idx_job_featured', 'job', ['is_featured', 'featured_until'], unique=False)
    op.create_index('idx_job_location', 'job', ['location'], unique=False)
    op.create_index('idx_job_location_salary', 'job', ['location', 'salary'], unique=False)
    op.create_index('idx_job_priority', 'job', ['priority_score'], unique=False)
    op.create_index('idx_job_salary', 'job', ['salary'], unique=False)
    op.create_index('idx_job_skill_levels', 'job', ['skill_levels'], unique=False, postgresql_using='gin')
    op.create_index('idx_job_slug', 'job', ['slug'], unique=False)
    op.create_index('idx_job_title_location', 'job', ['title', 'location'], unique=False)
    op.create_table('application',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('sent', 'reviewed', 'rejected', 'accepted', name='applicationstatus', create_type=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.String(length=500), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status != 'sent' OR created_at = updated_at", name='check_initial_status'),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_application_job', 'application', ['job_id'], unique=False)
    op.create_index('idx_application_job_status', 'application', ['job_id', 'status'], unique=False)
    op.create_index('idx_application_status', 'application', ['status'], unique=False)
    op.create_index('idx_application_status_created', 'application', ['status', 'created_at'], unique=False)
    op.create_index('idx_application_status_reviewed', 'application', ['status', 'reviewed_at'], unique=False)
    op.create_index('idx_application_user', 'application', ['user_id'], unique=False)
    op.create_index('idx_application_user_job', 'application', ['user_id', 'job_id'], unique=True)
    op.create_index('idx_application_user_status', 'application', ['user_id', 'status'], unique=False)
    op.create_table('job_skills',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id', 'skill_id')
    )
    op.create_index('idx_job_skills_job', 'job_skills', ['job_id'], unique=False)
    op.create_index('idx_job_skills_skill', 'job_skills', ['skill_id'], unique=False)
    op.create_table('job_tags',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id', 'tag_id')
    )
    op.create_index('idx_job_tags_job', 'job_tags', ['job_id'], unique=False)
    op.create_index('idx_job_tags_tag', 'job_tags', ['tag_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_job_tags_tag', table_name='job_tags')
    op.drop_index('idx_job_tags_job', table_name='job_tags')
    op.drop_table('job_tags')
    op.drop_index('idx_job_skills_skill', table_name='job_skills')
    op.drop_index('idx_job_skills_job', table_name='job_skills')
    op.drop_table('job_skills')
    op.drop_index('idx_application_user_status', table_name='application')
    op.drop_index('idx_application_user_job', table_name='application')
    op.drop_index('idx_application_user', table_name='application')
    op.drop_index('idx_application_status_reviewed', table_name='application')
    op.drop_index('idx_application_status_created', table_name='application')
    op.drop_index('idx_application_status', table_name='application')
    op.drop_index('idx_application_job_status', table_name='application')
    op.drop_index('idx_application_job', table_name='application')
    op.drop_table('application')
    op.drop_index('idx_job_title_location', table_name='job')
    op.drop_index('idx_job_slug', table_name='job')
    op.drop_index('idx_job_skill_levels', table_name='job', postgresql_using='gin')
    op.drop_index('idx_job_salary', table_name='job')
    op.drop_index('idx_job_priority', table_name='job')
    op.drop_index('idx_job_location_salary', table_name='job')
    op.drop_index('idx_job_location', table_name='job')
    op.drop_index('idx_job_featured', table_name='job')
    op.drop_index('idx_job_employment_type', table_name='job')
    op.drop_index('idx_job_education_level', table_name='job')
    op.drop_index('idx_job_deleted', table_name='job')
    op.drop_index('idx_job_company_active', table_name='job')
    op.drop_index('idx_job_company', table_name='job')
    op.drop_index('idx_job_category_featured', table_name='job')
    op.drop_index('idx_job_category', table_name='job')
    op.drop_index('idx_job_approved', table_name='job')
    op.drop_index('idx_job_active_expires', table_name='job')
    op.drop_index('idx_job_active_approved_featured', table_name='job')
    op.drop_table('job')
    op.drop_index('idx_invitation_unused', table_name='invitation')
    op.drop_index('idx_invitation_token', table_name='invitation')
    op.drop_index('idx_invitation_stats', table_name='invitation')
    op.drop_index('idx_invitation_sender_ip', table_name='invitation')
    op.drop_index('idx_invitation_expires', table_name='invitation')
    op.drop_index('idx_invitation_email', table_name='invitation')
    op.drop_index('idx_invitation_company', table_name='invitation')
    op.drop_table('invitation')
    op.drop_index('idx_member_user', table_name='companymember')
    op.drop_index('idx_member_role', table_name='companymember')
    op.drop_index('idx_member_permissions', table_name='companymember', postgresql_using='gin')
    op.drop_index('idx_member_company', table_name='companymember')
    op.drop_index('idx_member_active', table_name='companymember')
    op.drop_table('companymember')
    op.drop_index('idx_resume_version', table_name='resume')
    op.drop_index('idx_resume_user', table_name='resume')
    op.drop_index('idx_resume_slug', table_name='resume')
    op.drop_index('idx_resume_skills', table_name='resume', postgresql_using='gin')
    op.drop_index('idx_resume_public', table_name='resume')
    op.drop_index('idx_resume_languages', table_name='resume', postgresql_using='gin')
    op.drop_index('idx_resume_deleted', table_name='resume')
    op.drop_index('idx_resume_default', table_name='resume')
    op.drop_table('resume')
    op.drop_index('idx_perf_user', table_name='performancemetric')
    op.drop_index('idx_perf_status', table_name='performancemetric')
    op.drop_index('idx_perf_response_time', table_name='performancemetric')
    op.drop_index('idx_perf_endpoint', table_name='performancemetric')
    op.drop_table('performancemetric')
    op.drop_index('idx_notification_user', table_name='notification')
    op.drop_index('idx_notification_unread', table_name='notification')
    op.drop_index('idx_notification_type', table_name='notification')
    op.drop_index('idx_notification_sent', table_name='notification')
    op.drop_index('idx_notification_priority', table_name='notification')
    op.drop_index('idx_notification_group', table_name='notification')
    op.drop_index('idx_notification_expires', table_name='notification')
    op.drop_index('idx_notification_delivery', table_name='notification')
    op.drop_index('idx_notification_created', table_name='notification')
    op.drop_table('notification')
    op.drop_index('idx_message_unread_sender', table_name='message')
    op.drop_index('idx_message_unread', table_name='message')
    op.drop_index('idx_message_type', table_name='message')
    op.drop_index('idx_message_sender_ip_addr', table_name='message')
    op.drop_index('idx_message_sender', table_name='message')
    op.drop_index('idx_message_reply', table_name='message')
    op.drop_index('idx_message_recipient', table_name='message')
    op.drop_index('idx_message_flagged', table_name='message')
    op.drop_index('idx_message_deleted', table_name='message')
    op.drop_index('idx_message_created', table_name='message')
    op.drop_index('idx_message_chat_created', table_name='message')
    op.drop_index('idx_message_chat', table_name='message')
    op.drop_table('message')
    op.drop_index('idx_company_owner', table_name='company')
    op.drop_index('idx_company_name', table_name='company')
    op.drop_index('idx_company_industry', table_name='company')
    op.drop_index('idx_company_active_industry', table_name='company')
    op.drop_index('idx_company_active', table_name='company')
    op.drop_table('company')
    op.drop_index('idx_audit_user_action', table_name='auditlog')
    op.drop_index('idx_audit_table_action', table_name='auditlog')
    op.drop_index('idx_audit_session', table_name='auditlog')
    op.drop_index('idx_audit_record', table_name='auditlog')
    op.drop_index('idx_audit_ip', table_name='auditlog')
    op.drop_table('auditlog')
    op.drop_index('idx_user_verification_token', table_name='user')
    op.drop_index('idx_user_role', table_name='user')
    op.drop_index('idx_user_reset_token', table_name='user')
    op.drop_index('idx_user_locked', table_name='user')
    op.drop_index('idx_user_last_login', table_name='user')
    op.drop_index('idx_user_email_verified', table_name='user')
    op.drop_index('idx_user_email', table_name='user')
    op.drop_index('idx_user_deleted', table_name='user')
    op.drop_index('idx_user_active', table_name='user')
    op.drop_table('user')
    op.drop_index('idx_tag_normalized', table_name='tag')
    op.drop_index('idx_tag_active', table_name='tag')
    op.drop_table('tag')
    op.drop_index('idx_skill_normalized', table_name='skill')
    op.drop_index('idx_skill_active', table_name='skill')
    op.drop_table('skill')
    op.drop_index('idx_schema_version', table_name='schemaversion')
    op.drop_index('idx_schema_applied_by', table_name='schemaversion')
    op.drop_table('schemaversion')
    op.drop_index('idx_rate_limit_window', table_name='ratelimit')
    op.drop_index('idx_rate_limit_identifier', table_name='ratelimit')
    op.drop_table('ratelimit')
    op.drop_index('idx_category_parent', table_name='categories')
    op.drop_index('idx_category_name', table_name='categories')
    op.drop_index('idx_category_active', table_name='categories')
    op.drop_table('categories')
    op.drop_index('idx_cache_key', table_name='cacheentry')
    op.drop_index('idx_cache_expires', table_name='cacheentry')
    op.drop_table('cacheentry')
    # ### end Alembic commands ###
